<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
      
      <!-- xml 방식으로 aop 적용하기 -->
<!--       <bean id="loggerAspect" class="com.bs.spring.common.aop.LoggerAspect"/>
      	
      <aop:config>
      	  <aop:aspect ref="loggerAspect">
      	  	 <aop:pointcut expression="execution(* com.bs.spring..*(..))" id="logPointcut"/>
      	  	 execution(모든접근제어자  memo밑에있는 모든클래스안의 모든 메소드  매개변수개수 상관x
      	  	 <aop:before method="loggerBefore" pointcut-ref="logPointcut"/>
      	  	 <aop:after method="loggerAfter" pointcut-ref="logPointcut"/>
      	  </aop:aspect>
      </aop:config> -->
      
      
      <!-- annotation 방식으로 AOP적용하기 -->
      <aop:aspectj-autoproxy/> <!-- 이 태그가 존재해야, aop가 있다는것을 인식 -->
      
</beans>